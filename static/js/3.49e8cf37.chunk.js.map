{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProflileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileAPIComponent.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","onDoubleClick","profileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","summaryErrorBlock","createField","Input","required","Textarea","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","ProfileData","isOwner","onClick","fullName","lookingForJob","lookingForAJobDescription","ProfileInfo","Preloader","profileBackground","src","photos","large","userAvatar","alt","width","type","target","files","length","addPhoto","statuse","aboutMe","ProfileDataForm","initialValues","formData","saveProfileData","Post","post","message","likes","postMaxLengthCreator","maxLengthCreator","Posts","React","memo","postElements","postsData","p","id","textareaWrap","ProfilePostReduxForm","addPost","newPostBody","Field","component","name","placeholder","validate","PostsContainer","connect","state","profilePage","newPostText","dispatch","addPostAC","Profile","profileWrap","ProfileAPIComponent","userId","this","match","params","autorizedUserId","history","push","setProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","withURLDataContainerComponent","withRouter","authData","isAuth"],"mappings":"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","file":"static/js/3.49e8cf37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"Profile_profileWrap__17KMk\",\"profileBackground\":\"Profile_profileBackground__3dVhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__32xeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrap\":\"Posts_textareaWrap__2CStp\"};","import React, {useEffect, useState} from \"react\"\r\nimport s from '../Profile.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n       setEditMode(false)\r\n       props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!editMode ?\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || `No Status`}</span>\r\n                </div>\r\n            :\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\"\r\nimport {createField, Input, Textarea} from \"../../common/FormControls/FormControls\"\r\nimport {reduxForm} from \"redux-form\"\r\nimport {required} from \"../../../utils/validators\"\r\nimport s from \"../../common/FormControls/FormControls.module.css\"\r\n\r\nconst profileDataForm = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <ul>\r\n                <li>\r\n                    <button>Save</button>\r\n                </li>\r\n                { error && <div className={s.summaryErrorBlock}>\r\n                    {error}\r\n                </div>}\r\n                <li>Name: {createField(Input, [], 'fullName', 'fullName', 'text')}</li>\r\n                <li>Looking for a job:\r\n                    {createField(Input, [required], 'lookingForJob', '', 'checkbox')} Yes\r\n                </li>\r\n                <li>Job desc: {createField(Textarea, [required], 'lookingForAJobDescription', 'My professional skills','')}</li>\r\n\r\n                <li>About me: {createField(Textarea, [required], 'aboutMe', 'About me','')}</li>\r\n\r\n                <li>Contacts:</li>\r\n                <li>\r\n                     {Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key}>\r\n                            {key}: {createField(Input, [], 'contacts' + key, key,'')}\r\n                        </div>\r\n                    })}\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst profileDataReduxForm = reduxForm({form: 'editProfile'})(profileDataForm)\r\n\r\nexport default profileDataReduxForm","import React from \"react\";\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <ul>\r\n            {props.isOwner && <li><button onClick={props.editMode}>Edit</button></li>}\r\n            <li>Name: {props.profile.fullName}</li>\r\n            <li>Looking for a job: {props.profile.lookingForJob ? <span>Yes</span> : <span>No</span>}</li>\r\n            <li>About me: {props.profile.lookingForAJobDescription}</li>\r\n\r\n            <li>Contacts:</li>\r\n            <li>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n\r\n                    return <Contact key={key} contactTitle={key}\r\n                                    contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>{contactTitle}: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileData","import React, {useState} from \"react\"\r\nimport s from '../Profile.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userAvatar from \"../../../assets/images/user.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileData from \"./ProflileData\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onPhotoAdd = (e) => {\r\n        if (e.target.files.length) {\r\n            props.addPhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfileData(formData)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className={s.profileBackground}>\r\n                <img src={props.profile.photos.large || userAvatar} alt=\"\" width={300}/>\r\n                {props.isOwner && <input type={'file'} onChange={onPhotoAdd}/>}\r\n            </div>\r\n            <div>\r\n                <ProfileStatusWithHooks statuse={props.status} updateStatus={props.updateStatus}/>\r\n                <h3>{props.profile.aboutMe}</h3>\r\n                {editMode ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/> : <ProfileData profile={props.profile}\r\n                                                                                      isOwner={props.isOwner}\r\n                                                                                      editMode={() => {setEditMode(true)}}\r\n                                                                                      />}\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <li className={s.post}>\r\n            <img src=\"https://images.unsplash.com/photo-1508921912186-1d1a45ebb3c1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                {props.likes} likes\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './Posts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MAX_SYMBOLS_IN_POST = 10\r\nconst postMaxLengthCreator = maxLengthCreator(MAX_SYMBOLS_IN_POST)\r\n\r\nconst Posts = React.memo(props => {\r\n\r\n    let postElements = props.postsData\r\n        .map(p => <Post message={p.message} likes={p.likes} key={p.id}/>)\r\n\r\n    let addPost = (formData) => {\r\n        props.addPost(formData.newPostBody)\r\n        formData.newPostBody = ''\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            <li className={s.textareaWrap}>\r\n                <ProfilePostReduxForm onSubmit={addPost}/>\r\n            </li>\r\n\r\n            {postElements}\r\n        </ul>\r\n    )\r\n});\r\n\r\nconst ProfilePostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea}\r\n               name={`newPostBody`}\r\n               placeholder={`Type here...`}\r\n               validate={[required, postMaxLengthCreator]}/>\r\n        <button>Add Post</button>\r\n    </form>\r\n}\r\n\r\nconst ProfilePostReduxForm = reduxForm({\r\n    form: `newPost`\r\n})(ProfilePostForm)\r\n\r\nexport default Posts\r\n","import {addPostAC} from \"../../../Redux/profileReducer\"\r\nimport Posts from \"./Posts\"\r\nimport {connect} from \"react-redux\"\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostAC(newPostText))}\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n\r\nexport default PostsContainer\r\n","import React from \"react\"\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport PostsContainer from \"./Posts/PostsContainer\"\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <section className={s.profileWrap}>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         addPhoto={props.addPhoto}\r\n                         saveProfileData={props.saveProfileData}/>\r\n            <PostsContainer/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\"\r\nimport Profile from \"./Profile\"\r\n\r\nclass ProfileAPIComponent extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.setProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            isOwner={!this.props.match.params.userId}\r\n            addPhoto={this.props.addPhoto}/>\r\n    }\r\n}\r\n\r\nexport default ProfileAPIComponent","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport ProfileAPIComponent from \"./ProfileAPIComponent\"\r\nimport {addPhoto, getStatus, saveProfileData, setProfile, updateStatus} from \"../../Redux/profileReducer\"\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.authData.id,\r\n    isAuth: state.authData.isAuth\r\n})\r\n\r\nlet withURLDataContainerComponent = withRouter(ProfileAPIComponent)\r\n\r\nexport default connect(mapStateToProps, {setProfile, getStatus, updateStatus, addPhoto, saveProfileData})(withURLDataContainerComponent)"],"sourceRoot":""}