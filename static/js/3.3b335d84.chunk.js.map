{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileAPIComponent.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","onDoubleClick","profileDataReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","Input","Textarea","ProfileData","isOwner","onClick","profile","fullName","lookingForJob","lookingForAJobDescription","Object","keys","contacts","map","key","contactTitle","contactValue","Contact","ProfileInfo","Preloader","className","s","profileBackground","src","photos","large","userAvatar","alt","width","type","target","files","length","addPhoto","statuse","aboutMe","ProfileDataForm","formData","console","log","Post","post","message","likes","postMaxLengthCreator","maxLengthCreator","Posts","React","memo","postElements","postsData","p","id","textareaWrap","ProfilePostReduxForm","addPost","newPostBody","Field","component","name","placeholder","validate","required","PostsContainer","connect","state","profilePage","newPostText","dispatch","addPostAC","Profile","profileWrap","ProfileAPIComponent","userId","this","match","params","autorizedUserId","history","push","setProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","withURLDataContainerComponent","withRouter","authData","isAuth"],"mappings":"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","file":"static/js/3.3b335d84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"Profile_profileWrap__17KMk\",\"profileBackground\":\"Profile_profileBackground__3dVhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__32xeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrap\":\"Posts_textareaWrap__2CStp\"};","import React, {useEffect, useState} from \"react\"\r\nimport s from '../Profile.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n       setEditMode(false)\r\n       props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!editMode ?\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || `No Status`}</span>\r\n                </div>\r\n            :\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\n\r\nconst profileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <ul>\r\n                <li>\r\n                    <button>Save</button>\r\n                </li>\r\n                <li>Name: {createField(Input, [], 'fullName', 'fullName', 'text')}</li>\r\n                <li>Looking for a job:\r\n                    <label>{createField(Input, [], 'lookingForJob', '', 'checkbox')} Yes</label>\r\n                </li>\r\n                <li>About me: {createField(Textarea, [], 'AboutMe', 'My professional skills','')}</li>\r\n\r\n                <li>Contacts:</li>\r\n                <li>\r\n                    {/* {Object.keys(props.profile.contacts).map(key => {\r\n\r\n                        return <Contact key={key} contactTitle={key}\r\n                                        contactValue={props.profile.contacts[key]}/>\r\n                    })}*/}\r\n                </li>\r\n            </ul>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst profileDataReduxForm = reduxForm({form: 'editProfile'})(profileDataForm)\r\n\r\nexport default profileDataReduxForm","import React, {useState} from \"react\"\r\nimport s from '../Profile.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userAvatar from \"../../../assets/images/user.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onPhotoAdd = (e) => {\r\n        if (e.target.files.length) {\r\n            props.addPhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className={s.profileBackground}>\r\n                <img src={props.profile.photos.large || userAvatar} alt=\"\" width={300}/>\r\n                {props.isOwner && <input type={'file'} onChange={onPhotoAdd}/>}\r\n            </div>\r\n            <div>\r\n                <ProfileStatusWithHooks statuse={props.status} updateStatus={props.updateStatus}/>\r\n                <h3>{props.profile.aboutMe}</h3>\r\n                {editMode ? <ProfileDataForm profile={props.profile} onSubmit={onSubmit}/> : <ProfileData profile={props.profile}\r\n                                                                                      isOwner={props.isOwner}\r\n                                                                                      editMode={() => {setEditMode(true)}}\r\n                                                                                      />}\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <ul>\r\n            {props.isOwner && <li><button onClick={props.editMode}>Edit</button></li>}\r\n            <li>Name: {props.profile.fullName}</li>\r\n            <li>Looking for a job: {props.profile.lookingForJob ? <span>Yes</span> : <span>No</span>}</li>\r\n            <li>About me: {props.profile.lookingForAJobDescription}</li>\r\n\r\n            <li>Contacts:</li>\r\n            <li>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n\r\n                    return <Contact key={key} contactTitle={key}\r\n                                    contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>{contactTitle}: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <li className={s.post}>\r\n            <img src=\"https://images.unsplash.com/photo-1508921912186-1d1a45ebb3c1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                {props.likes} likes\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './Posts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MAX_SYMBOLS_IN_POST = 10\r\nconst postMaxLengthCreator = maxLengthCreator(MAX_SYMBOLS_IN_POST)\r\n\r\nconst Posts = React.memo(props => {\r\n\r\n    let postElements = props.postsData\r\n        .map(p => <Post message={p.message} likes={p.likes} key={p.id}/>)\r\n\r\n    let addPost = (formData) => {\r\n        props.addPost(formData.newPostBody)\r\n        formData.newPostBody = ''\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            <li className={s.textareaWrap}>\r\n                <ProfilePostReduxForm onSubmit={addPost}/>\r\n            </li>\r\n\r\n            {postElements}\r\n        </ul>\r\n    )\r\n});\r\n\r\nconst ProfilePostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea}\r\n               name={`newPostBody`}\r\n               placeholder={`Type here...`}\r\n               validate={[required, postMaxLengthCreator]}/>\r\n        <button>Add Post</button>\r\n    </form>\r\n}\r\n\r\nconst ProfilePostReduxForm = reduxForm({\r\n    form: `newPost`\r\n})(ProfilePostForm)\r\n\r\nexport default Posts\r\n","import {addPostAC} from \"../../../Redux/profileReducer\"\r\nimport Posts from \"./Posts\"\r\nimport {connect} from \"react-redux\"\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostAC(newPostText))}\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n\r\nexport default PostsContainer\r\n","import React from \"react\"\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport PostsContainer from \"./Posts/PostsContainer\"\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <section className={s.profileWrap}>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         addPhoto={props.addPhoto}/>\r\n            <PostsContainer/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\"\r\nimport Profile from \"./Profile\"\r\n\r\nclass ProfileAPIComponent extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.setProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            isOwner={!this.props.match.params.userId}\r\n            addPhoto={this.props.addPhoto}/>\r\n    }\r\n}\r\n\r\nexport default ProfileAPIComponent","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport ProfileAPIComponent from \"./ProfileAPIComponent\"\r\nimport {addPhoto, getStatus, setProfile, updateStatus} from \"../../Redux/profileReducer\"\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.authData.id,\r\n    isAuth: state.authData.isAuth\r\n})\r\n\r\nlet withURLDataContainerComponent = withRouter(ProfileAPIComponent)\r\n\r\nexport default connect(mapStateToProps, {setProfile, getStatus, updateStatus, addPhoto})(withURLDataContainerComponent)"],"sourceRoot":""}