{"version":3,"sources":["Redux/dialogsReducer.js","components/Footer/Footer.module.css","components/Navbar/Navbar.module.css","components/api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Footer/Footer.jsx","components/common/Paggination/Paggination.jsx","assets/images/user.jpg","components/Users/User.jsx","components/Users/Users.jsx","components/Users/UsersAPIComponent.jsx","utils/object-helper.js","Redux/usersReducer.js","Redux/usersSelectors.js","components/Users/UsersContainer.js","components/Header/Header.jsx","components/Header/HeaderAPIComponent.jsx","Redux/authReducer.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","components/Login/LoginContainer.jsx","Redux/appReducer.js","Redux/redux-store.js","components/hoc/withSuspense.js","App.js","index.js","components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","components/common/Preloader/Preloader.jsx","components/Users/Users.module.css","assets/images/gif/tree.gif","components/Header/Header.module.css","utils/validators.js","components/common/Paggination/Paggination.module.css","Redux/profileReducer.js"],"names":["SEND_MESSAGE","initialState","dialogsData","id","name","avatar","messagesData","textMessage","sendMessageAC","newMessageBody","type","dialogsReducer","state","action","module","exports","instance","axios","withCredentials","baseURL","headers","UsersAPI","getUsers","currentPage","pageLimit","get","then","response","data","follow","userId","post","unfollow","delete","ProfileAPI","getProfile","getStatus","updateStatus","status","put","AuthAPI","authCheck","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","navigation","item","active","to","activeClassName","News","Music","Settings","Footer","props","pageFooter","Paggination","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPotionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","pagginationList","filter","p","map","User","user","followingInProgress","u","userItem","src","photos","small","userAvatar","alt","followed","disabled","some","Users","totalUsersCount","usersList","users","UsersAPIComponent","pageNumber","setCurrentPage","this","isFetching","Preloader","React","Component","updateObjectInArray","items","itemId","objPropName","newObjProps","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","acceptFollow","userID","acceptUnfollow","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","APIMethod","actionCreator","a","resultCode","usersReducer","page","totalCount","getUsersSelector","usersPage","getPagesSelector","getTotalUsersCountSelector","getCurrentPageSelector","getIsFetchingSelector","getFollowingInProgressSelector","connect","usersAPI","bind","Header","header","appLogo","tree","headerAuthWrap","authData","isAuth","logoutThunkCreator","headerAPIComponent","SET_AUTH","setAuth","authReducer","HeaderAPIComponent","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","summaryErrorBlock","LoginPage","loginThunkCreator","formData","message","messages","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","WithSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","HeaderContainer","path","render","UsersContainer","component","AppContainer","withRouter","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Textarea","input","meta","touched","hasError","formControl","validators","placeholder","validate","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","postsData","likes","profile","addPostAC","newPostText","setStatus","setProfile","newPost"],"mappings":"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","file":"static/js/main.20d181bb.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogsData:  [\r\n        {\r\n            id: 1,\r\n            name: 'Vasya',\r\n            avatar: 'https://data.whicdn.com/images/89749317/original.png'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ivan',\r\n            avatar: 'https://creators-images.vice.com/content-images/contentimage/no-slug/98ed59080aa70a58e581e341769349bb.jpg'},\r\n        {\r\n            id: 3,\r\n            name: 'Petr',\r\n            avatar: 'https://posterspy.com/wp-content/uploads/2014/07/10247352_10200924919284968_2948106246049733614_n.png'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Grisha',\r\n            avatar: 'https://creators-images.vice.com/content-images/contentimage/no-slug/445fae41e83cbf62cb006e736b54637a.jpg'\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, textMessage: 'Hi'},\r\n        {id: 2, textMessage: 'Where are you'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let textMessage = action.newMessageBody\r\n\r\n           return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 3, textMessage: textMessage} ]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageAC = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageFooter\":\"Footer_pageFooter__2RKt4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navbar_navigation__3Yvjf\",\"item\":\"Navbar_item__1cUyC\",\"active\":\"Navbar_active__2GKQ2\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': '38f6e9f2-1b51-441e-92a2-145c5d6036b5'\r\n    }\r\n})\r\n\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 1, pageLimit = 10) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count${pageLimit}`)\r\n                .then(response => response.data)\r\n        )\r\n    },\r\n\r\n    follow(userId) {\r\n        return (\r\n            instance.post(`follow/${userId}`).then(response => response.data)\r\n        )\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return (\r\n            instance.delete(`follow/${userId}`).then(response => response.data)\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n        )\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n        )\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put(`profile/status`, {status: status})\r\n        )\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n    authCheck() {\r\n        return (\r\n            instance.get(`auth/me`).then(response => response.data)\r\n        )\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return (\r\n            instance.post(`auth/login`, {email, password, rememberMe})\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login`).then(response => response.data)\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" DialogsItem.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.navigation}>\r\n            <ul>\r\n                <li className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n                </li>\r\n                <li className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>News</div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>Music</div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>Settings</div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from \"react\"\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <section className={s.pageFooter}>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {useState} from 'react'\r\nimport s from './Paggination.module.css'\r\n\r\nconst Paggination = ({totalItemsCount, pageLimit, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageLimit)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPotionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 && <button onClick={ () => {setPotionNumber(1)} }>First</button>}\r\n            {portionNumber > 1 && <button onClick={ () => {setPotionNumber(portionNumber - 1)} }>Prev</button>}\r\n\r\n            <ul className={s.pagginationList}>\r\n                {\r\n                    pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                        .map(p => {\r\n                        return <li className={currentPage === p ? s.active : ``} key={p} onClick={() => {\r\n                            onPageChanged(p)\r\n                        }}>\r\n                            <button>{p}</button>\r\n                        </li>\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n            {portionNumber < portionCount && <button onClick={ () => {setPotionNumber(portionNumber + 1)} }>Next</button>}\r\n            {portionNumber < portionCount && <button onClick={ () => {setPotionNumber(portionCount)} }>Last</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paggination","export default __webpack_public_path__ + \"static/media/user.b4cc600d.jpg\";","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport userAvatar from '../../assets/images/user.jpg'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n    let u = user\r\n    return (\r\n        <li className={s.userItem}>\r\n            <NavLink to={'/profile/' + u.id}>\r\n                <img src={u.photos.small !== null ? u.photos.small : userAvatar} className={s.avatar}\r\n                     alt=''/>\r\n            </NavLink>\r\n            <span>{user.name}</span>\r\n            <span>{user.status}</span>\r\n\r\n            {u.followed\r\n                ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                          onClick={() => {\r\n                              unfollow(u.id)\r\n                          }}>Unfollow</button>\r\n                : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                          onClick={() => {\r\n                              follow(u.id)\r\n                          }}>Follow</button>}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport s from './Users.module.css'\r\nimport Paggination from '../common/Paggination/Paggination'\r\nimport User from './User'\r\n\r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageLimit)\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <ul className={s.usersList}>\r\n                {props.users.map(u => <User key={u.id}\r\n                                            user={u}\r\n                                            followingInProgress={props.followingInProgress}\r\n                                            unfollow={props.unfollow}\r\n                                            follow={props.follow}/>)}\r\n            </ul>\r\n\r\n            <Paggination totalItemsCount={props.totalUsersCount}\r\n                         pageLimit={props.pageLimit}\r\n                         currentPage={props.currentPage}\r\n                         onPageChanged={props.onPageChanged}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Users\r\n","import React from \"react\"\r\nimport Users from \"./Users\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageLimit)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageLimit)\r\n        this.props.setCurrentPage(pageNumber)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageLimit={this.props.pageLimit}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                onPageChanged={this.onPageChanged}\r\n                currentPage={this.props.currentPage}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nexport default UsersAPIComponent","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}\r\n\r\n","import {UsersAPI as usersAPI} from \"../components/api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pages: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, `id`, {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, `id`, {followed: false})\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const acceptFollow = (userID) => ({type: FOLLOW, userID})\r\nexport const acceptUnfollow = (userID) => ({type: UNFOLLOW, userID})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (page) => ({type: SET_CURRENT_PAGE, page})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (currentPage, pageLimit) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let data = await usersAPI.getUsers(currentPage, pageLimit)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nexport const followUnfollowFlow = async (dispatch, userId, APIMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await APIMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    let APIMethod = usersAPI.follow.bind(usersAPI)\r\n    let actionCreator = acceptFollow\r\n\r\n    followUnfollowFlow(dispatch, userId, APIMethod, actionCreator)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    let APIMethod = usersAPI.unfollow.bind(usersAPI)\r\n    let actionCreator = acceptUnfollow\r\n\r\n    followUnfollowFlow(dispatch, userId, APIMethod, actionCreator)\r\n}\r\n\r\nexport default usersReducer","export const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPagesSelector = (state) => {\r\n    return state.usersPage.pages\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport UsersAPIComponent from './UsersAPIComponent'\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    unfollow\r\n} from '../../Redux/usersReducer'\r\nimport {\r\n    getCurrentPageSelector, getFollowingInProgressSelector, getIsFetchingSelector,\r\n    getPagesSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from '../../Redux/usersSelectors'\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageLimit: getPagesSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        followingInProgress: getFollowingInProgressSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers})(UsersAPIComponent)\r\n\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport tree from '../../assets/images/gif/tree.gif'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.appLogo}>\r\n                <img src={tree} alt=\"Logo\"/>\r\n            </div>\r\n\r\n            <div className={s.headerAuthWrap}>\r\n                {props.authData.isAuth\r\n                    ? <div>{props.authData.login} - <button onClick={props.logoutThunkCreator}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\nimport Header from \"./Header\"\r\n\r\n\r\nclass headerAPIComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default headerAPIComponent","import {AuthAPI} from \"../components/api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_AUTH = 'auth/SET_AUTH'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuth = (id, login, email, isAuth) => ({\r\n    type: SET_AUTH, data: {\r\n        id,\r\n        login,\r\n        email,\r\n        isAuth\r\n    }\r\n})\r\n\r\nexport const authCheck = () => async (dispatch) => {\r\n    let response = await AuthAPI.authCheck()\r\n\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data\r\n        dispatch(setAuth(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(authCheck())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logoutThunkCreator = () => async (dispatch) => {\r\n    let response = await AuthAPI.logout()\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuth(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","import HeaderAPIComponent from \"./HeaderAPIComponent\"\r\nimport {connect} from \"react-redux\"\r\nimport {logoutThunkCreator} from \"../../Redux/authReducer\"\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        authData: state.authData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logoutThunkCreator})(HeaderAPIComponent)","import React from 'react'\r\nimport {reduxForm} from 'redux-form'\r\nimport {createField, Input} from '../common/FormControls/FormControls'\r\nimport {required} from '../../utils/validators'\r\nimport {Redirect} from 'react-router-dom'\r\nimport s from './../common/FormControls/FormControls.module.css'\r\n\r\nconst LoginPage = ({loginThunkCreator, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        loginThunkCreator(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (isAuth) {\r\n       return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n            {createField(Input, [required], 'email', 'Login', 'text')}\r\n            {createField(Input, [required], 'password', 'Password', 'password')}\r\n        <div>\r\n            <label>\r\n                {createField(Input, [], 'rememberMe', '', 'checkbox')} Remember me\r\n            </label>\r\n        </div>\r\n        <div>\r\n            <button>Submit</button>\r\n        </div>\r\n\r\n        { error && <div className={s.summaryErrorBlock}>\r\n            {error}\r\n        </div>}\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\n\r\nexport default LoginPage","import {connect} from 'react-redux'\r\nimport LoginPage from './Login'\r\nimport {loginThunkCreator, logoutThunkCreator} from '../../Redux/authReducer'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.authData.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator, logoutThunkCreator})(LoginPage)","import {authCheck} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authCheck())\r\n        promise.then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport dialogsReducer from \"./dialogsReducer\"\r\nimport profileReducer from \"./profileReducer\"\r\nimport usersReducer from \"./usersReducer\"\r\nimport authReducer from \"./authReducer\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    authData: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store","import * as React from \"react\"\r\nimport {Suspense} from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}","import React from 'react'\nimport './App.css'\nimport Navbar from './components/Navbar/Navbar'\nimport News from './components/News/News'\nimport Music from './components/Music/Music'\nimport Settings from './components/Settings/Settings'\nimport Footer from './components/Footer/Footer'\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom'\nimport UsersContainer from './components/Users/UsersContainer'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport LoginPage from './components/Login/LoginContainer'\nimport {connect, Provider} from 'react-redux'\nimport {compose} from 'redux'\nimport {initializeApp} from './Redux/appReducer'\nimport Preloader from './components/common/Preloader/Preloader'\nimport store from \"./Redux/redux-store\"\nimport {WithSuspense} from \"./components/hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        } else {\n            return (\n                <div className='appBody'>\n                    <div className='app-wrapper'>\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='appWrapperContent'>\n                            <Route path='/profile/:userId?' render={WithSuspense(ProfileContainer)}/>\n                            <Route path='/dialogs' render={WithSuspense(DialogsContainer)}/>\n                            <Route path='/users' render={() =>\n                                <UsersContainer/>\n                            }/>\n                            <Route path='/login' render={() =>\n                                <LoginPage/>\n                            }/>\n                            <Route path='/news' component={News}/>\n                            <Route path='/music' component={Music}/>\n                            <Route path='/settings' component={Settings}/>\n                        </div>\n\n                        <Footer/>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized\n    }\n}\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App)\n\nlet MainApp = () => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default MainApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport MainApp from \"./App\";\n\n\nReactDOM.render(\n    <MainApp/>, document.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()","import React from 'react'\r\nimport s from './FormControls.module.css'\r\nimport {Field} from 'redux-form';\r\n\r\nexport const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ` ` + (hasError ? s.error : ``)}>\r\n            <div>\r\n                <textarea {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ` ` + (hasError ? s.error : ``)}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (component, validators, name, placeholder, type) => (\r\n    <div>\r\n        <Field component={component} validate={validators} name={name} type={type} placeholder={placeholder}/>\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1USPq\",\"error\":\"FormControls_error__3cBVG\",\"summaryErrorBlock\":\"FormControls_summaryErrorBlock__1fNBK\"};","import React from \"react\"\r\nimport preloader from \"../../../assets/images/gif/tree.gif\"\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__3a8ya\",\"usersList\":\"Users_usersList__URAnd\",\"userItem\":\"Users_userItem__EXVmT\"};","export default __webpack_public_path__ + \"static/media/tree.4527b6f7.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__vvGHY\",\"appLogo\":\"Header_appLogo__2wYu1\",\"headerAuthWrap\":\"Header_headerAuthWrap__wYhCj\"};","export const required = (value) => {\r\n    if (value) return undefined\r\n    return `This field is required`\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagginationList\":\"Paggination_pagginationList__2rDTH\",\"active\":\"Paggination_active__166uq\"};","import {ProfileAPI} from \"../components/api/api\"\r\n\r\nconst ADD_POST = 'ADD_POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, message: 'Hi. How are you', likes: 12},\r\n        {id: 2, message: 'Fine thnx', likes: 122}\r\n    ],\r\n    profile: null,\r\n    status: ``\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likes: 0\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost]\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const setProfile = (userId) => async (dispatch) => {\r\n    let response = await ProfileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await ProfileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await ProfileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n }\r\n\r\n\r\nexport default profileReducer"],"sourceRoot":""}