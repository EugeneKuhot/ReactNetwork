{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileAPIComponent.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","onDoubleClick","ProfileInfo","profile","className","s","profileBackground","src","photos","large","alt","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","Post","post","message","likes","postMaxLengthCreator","maxLengthCreator","Posts","React","memo","postElements","postsData","map","p","id","textareaWrap","ProfilePostReduxForm","onSubmit","formData","addPost","newPostBody","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","PostsContainer","connect","state","profilePage","newPostText","dispatch","addPostAC","Profile","profileWrap","ProfileAPIComponent","userId","this","match","params","autorizedUserId","history","push","setProfile","getStatus","Component","withURLDataContainerComponent","withRouter","authData","isAuth"],"mappings":"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","file":"static/js/3.e2e29123.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"Profile_profileWrap__17KMk\",\"profileBackground\":\"Profile_profileBackground__3dVhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__32xeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textareaWrap\":\"Posts_textareaWrap__2CStp\"};","import React, {useEffect, useState} from \"react\"\r\nimport s from '../Profile.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n        }, [props.status]\r\n    )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n       setEditMode(false)\r\n       props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {!editMode ?\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || `No Status`}</span>\r\n                </div>\r\n            :\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\"\r\nimport s from '../Profile.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className={s.profileBackground}>\r\n                <img src={props.profile.photos.large} alt=\"\"/>\r\n            </div>\r\n           <div>\r\n               <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n               <h3>{props.profile.aboutMe}</h3>\r\n\r\n               <ul>\r\n                   <li>Facebook: {props.profile.contacts.facebook}</li>\r\n                   <li>Website: {props.profile.contacts.website}</li>\r\n                   <li>VK: {props.profile.contacts.vk}</li>\r\n                   <li>Twitter: {props.profile.contacts.twitter}</li>\r\n                   <li>Instagram: {props.profile.contacts.instagram}</li>\r\n                   <li>Youtube: {props.profile.contacts.youtube}</li>\r\n                   <li>Github: {props.profile.contacts.github}</li>\r\n                   <li>Other link: {props.profile.contacts.mainLink}</li>\r\n               </ul>\r\n           </div>\r\n\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <li className={s.post}>\r\n            <img src=\"https://images.unsplash.com/photo-1508921912186-1d1a45ebb3c1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\" alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                {props.likes} likes\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './Posts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MAX_SYMBOLS_IN_POST = 10\r\nconst postMaxLengthCreator = maxLengthCreator(MAX_SYMBOLS_IN_POST)\r\n\r\nconst Posts = React.memo(props => {\r\n\r\n    let postElements = props.postsData\r\n        .map(p => <Post message={p.message} likes={p.likes} key={p.id}/>)\r\n\r\n    let addPost = (formData) => {\r\n        props.addPost(formData.newPostBody)\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            <li className={s.textareaWrap}>\r\n                <ProfilePostReduxForm onSubmit={addPost}/>\r\n            </li>\r\n\r\n            {postElements}\r\n        </ul>\r\n    )\r\n});\r\n\r\nconst ProfilePostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea}\r\n               name={`newPostBody`}\r\n               placeholder={`Type here...`}\r\n               validate={[required, postMaxLengthCreator]}/>\r\n        <button>Add Post</button>\r\n    </form>\r\n}\r\n\r\nconst ProfilePostReduxForm = reduxForm({\r\n    form: `newPost`\r\n})(ProfilePostForm)\r\n\r\nexport default Posts\r\n","import {addPostAC} from \"../../../Redux/profileReducer\"\r\nimport Posts from \"./Posts\"\r\nimport {connect} from \"react-redux\"\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostAC(newPostText))}\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n\r\nexport default PostsContainer\r\n","import React from \"react\"\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport PostsContainer from \"./Posts/PostsContainer\"\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <section className={s.profileWrap}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <PostsContainer/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\"\r\nimport Profile from \"./Profile\"\r\n\r\nclass ProfileAPIComponent extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId\r\n\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.setProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render() {\r\n        return <Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nexport default ProfileAPIComponent","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport ProfileAPIComponent from \"./ProfileAPIComponent\"\r\nimport {getStatus, setProfile, updateStatus} from \"../../Redux/profileReducer\"\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.authData.id,\r\n    isAuth: state.authData.isAuth\r\n})\r\n\r\nlet withURLDataContainerComponent = withRouter(ProfileAPIComponent)\r\n\r\nexport default connect(mapStateToProps, {setProfile, getStatus, updateStatus})(withURLDataContainerComponent)"],"sourceRoot":""}