{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialogItem","active","src","avatar","alt","to","activeClassName","name","MessageItem","messageItem","textMessage","messageMaxLengthCreator","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","dialogsPage","dialogList","messagesList","textareaWrap","formData","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","authData","compose","connect","newMessageText","dispatch","sendMessageAC","Component","RedirectComponent","this","React"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,WAAa,4BAA4B,aAAe,8BAA8B,aAAe,gC,oBCAlKD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,OAAS,8B,+GCgBzDC,EAbK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAIC,UAAWC,IAAEC,WAAa,IAAMD,IAAEE,OAAtC,UACI,qBAAKC,IAAKP,EAAMQ,OAAQC,IAAI,KAC5B,cAAC,IAAD,CAASC,GAAIT,EAAMU,gBAAiBP,IAAEE,OAAtC,SACKN,EAAMY,WCCRC,EARK,SAACb,GACjB,OACI,oBAAIG,UAAWC,IAAEU,YAAjB,SACKd,EAAMe,e,iCCGbC,EAA0BC,YADD,IAwCzBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAVL,SAACnB,GACpB,OAAO,uBAAMqB,SAAUrB,EAAMsB,aAAtB,UACC,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBJ,KAAM,iBACNgB,YAAY,0BACnB,gDAMGC,EAvCC,SAAC7B,GAEb,IAAI8B,EAAkB9B,EAAM+B,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAarB,KAAMqB,EAAErB,KAAMV,GAAI+B,EAAE/B,GACpBM,OAAQyB,EAAEzB,QADmByB,EAAE/B,OAEzFgC,EAAmBlC,EAAMmC,aAAaH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAarB,YAAaqB,EAAErB,aAAkBqB,EAAElC,OAOnG,OACI,sBAAKC,UAAWC,IAAEiC,YAAlB,UACI,oBAAIlC,UAAWC,IAAEkC,WAAjB,SACKR,IAEL,qBAAI3B,UAAWC,IAAEmC,aAAjB,UACKL,EAED,oBAAI/B,UAAWC,IAAEoC,aAAjB,SACI,cAACtB,EAAD,CAAqBG,SAdnB,SAACoB,GACfzC,EAAM0C,YAAYD,EAASE,gBAC3BF,EAASE,eAAiB,e,uDChB9BC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,SAASD,S,OCchBE,sBACXC,aAfkB,SAACJ,GACnB,MAAO,CACHd,YAAac,EAAMR,YAAYN,YAC/BI,aAAcU,EAAMR,YAAYF,aAChCe,eAAgBL,EAAMR,YAAYa,mBAIjB,SAACC,GACtB,MAAO,CACHT,YAAa,SAACC,GAAoBQ,EAASC,YAAcT,UDNjC,SAACU,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKvD,MAAM8C,OAIT,cAACO,EAAD,eAAeE,KAAKvD,QAHhB,cAAC,IAAD,CAAUU,GAAG,eAJW,GACX8C,aAYhC,OAFiCP,YAAQL,EAARK,CAAoCK,KCD1DN,CAGbnB","file":"static/js/4.1b581024.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__2nNkO\",\"dialogList\":\"Dialogs_dialogList__6Kixz\",\"messagesList\":\"Dialogs_messagesList__3vmjs\",\"textareaWrap\":\"Dialogs_textareaWrap__1xnXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogsItem_dialogItem__3AF5g\",\"active\":\"DialogsItem_active__1rUBa\"};","import React from \"react\"\r\nimport s from \"./DialogsItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return (\r\n        <li className={s.dialogItem + ' ' + s.active}>\r\n            <img src={props.avatar} alt=\"\"/>\r\n            <NavLink to={path} activeClassName={s.active} >\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default DialogsItem","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <li className={s.messageItem}>\r\n            {props.textMessage}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default MessageItem","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\"\r\nimport MessageItem from \"./MessageItem/MessageItem\"\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport {Textarea} from \"../common/FormControls/FormControls\"\r\nimport {maxLengthCreator, required} from \"../../utils/validators\"\r\n\r\n\r\nconst MAX_SYMBOLS_IN_MESSAGE = 10\r\nconst messageMaxLengthCreator = maxLengthCreator(MAX_SYMBOLS_IN_MESSAGE)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsData.map(d => <DialogsItem name={d.name} id={d.id} key={d.id}\r\n                                                                  avatar={d.avatar}/>)\r\n    let messagesElements = props.messagesData.map(m => <MessageItem textMessage={m.textMessage} key={m.id}/>)\r\n\r\n    let sendMessage = (formData) => {\r\n        props.sendMessage(formData.newMessageBody)\r\n        formData.newMessageBody = ''\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogsPage}>\r\n            <ul className={s.dialogList}>\r\n                {dialogsElements}\r\n            </ul>\r\n            <ul className={s.messagesList}>\r\n                {messagesElements}\r\n\r\n                <li className={s.textareaWrap}>\r\n                    <AddMessageReduxForm onSubmit={sendMessage}/>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   validate={[required, messageMaxLengthCreator]}\r\n                   name={'newMessageBody'}\r\n                   placeholder='Enter your message...'/>\r\n            <button>Send</button>\r\n        </form>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs","import * as React from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authData.isAuth\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","import {sendMessageAC} from \"../../Redux/dialogsReducer\"\r\nimport Dialogs from \"./Dialogs\"\r\nimport {connect} from \"react-redux\"\r\nimport {WithAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messagesData: state.dialogsPage.messagesData,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageAC(newMessageBody))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}